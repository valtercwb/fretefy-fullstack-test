// <auto-generated />
using Fretefy.Test.Infra.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fretefy.Test.Infra.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Fretefy.Test.Domain.Entities.Cidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cidade");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Nome = "Rio Branco",
                            UF = "AC"
                        },
                        new
                        {
                            Id = 2L,
                            Nome = "Maceió",
                            UF = "AL"
                        },
                        new
                        {
                            Id = 3L,
                            Nome = "Macapá",
                            UF = "AP"
                        },
                        new
                        {
                            Id = 4L,
                            Nome = "Manaus",
                            UF = "AM"
                        },
                        new
                        {
                            Id = 5L,
                            Nome = "Salvador",
                            UF = "BA"
                        },
                        new
                        {
                            Id = 6L,
                            Nome = "Fortaleza",
                            UF = " CE"
                        },
                        new
                        {
                            Id = 7L,
                            Nome = "Brasília",
                            UF = "DF"
                        },
                        new
                        {
                            Id = 8L,
                            Nome = "Vitória",
                            UF = "ES"
                        },
                        new
                        {
                            Id = 9L,
                            Nome = "Goiânia",
                            UF = "GO"
                        },
                        new
                        {
                            Id = 10L,
                            Nome = "São Luís",
                            UF = "MA"
                        },
                        new
                        {
                            Id = 11L,
                            Nome = "Cuiabá",
                            UF = "MT"
                        },
                        new
                        {
                            Id = 12L,
                            Nome = "Campo Grande",
                            UF = "MS"
                        },
                        new
                        {
                            Id = 13L,
                            Nome = "Belo Horizonte",
                            UF = "MG"
                        },
                        new
                        {
                            Id = 14L,
                            Nome = "Belém",
                            UF = "PA"
                        },
                        new
                        {
                            Id = 15L,
                            Nome = "João Pessoa",
                            UF = "PB"
                        },
                        new
                        {
                            Id = 16L,
                            Nome = "Curitiba",
                            UF = "PR"
                        },
                        new
                        {
                            Id = 17L,
                            Nome = "Recife",
                            UF = "PE"
                        },
                        new
                        {
                            Id = 18L,
                            Nome = "Teresina",
                            UF = "PI"
                        },
                        new
                        {
                            Id = 19L,
                            Nome = "Rio de Janeiro",
                            UF = "RJ"
                        },
                        new
                        {
                            Id = 20L,
                            Nome = "Natal",
                            UF = "RN"
                        },
                        new
                        {
                            Id = 21L,
                            Nome = "Porto Alegre",
                            UF = "RS"
                        },
                        new
                        {
                            Id = 22L,
                            Nome = "Porto Velho",
                            UF = "RO"
                        },
                        new
                        {
                            Id = 23L,
                            Nome = "Boa Vista",
                            UF = "RR"
                        },
                        new
                        {
                            Id = 24L,
                            Nome = "Florianópolis",
                            UF = "SC"
                        },
                        new
                        {
                            Id = 25L,
                            Nome = "São Paulo",
                            UF = "SP"
                        },
                        new
                        {
                            Id = 26L,
                            Nome = "Aracaju",
                            UF = "SE"
                        },
                        new
                        {
                            Id = 27L,
                            Nome = "Palmas",
                            UF = "TO"
                        });
                });

            modelBuilder.Entity("Fretefy.Test.Domain.Entities.Regiao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Regiao");
                });

            modelBuilder.Entity("Fretefy.Test.Domain.Entities.RegiaoCidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CidadeId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RegiaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("RegiaoId");

                    b.ToTable("RegiaoCidade");
                });

            modelBuilder.Entity("Fretefy.Test.Domain.Entities.RegiaoCidade", b =>
                {
                    b.HasOne("Fretefy.Test.Domain.Entities.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fretefy.Test.Domain.Entities.Regiao", null)
                        .WithMany("RegiaoCidades")
                        .HasForeignKey("RegiaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("Fretefy.Test.Domain.Entities.Regiao", b =>
                {
                    b.Navigation("RegiaoCidades");
                });
#pragma warning restore 612, 618
        }
    }
}
